name: CI

on:
  pull_request:
    branches: '*'
  push:
    branches: [ main ]
    paths:
      - 'cdk/**'
      - 'app/**'
      - 'adot/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./cdk/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./cdk
      - name: Modify test files to mock canary handler
        run: |
          # テスト用にCanaryコードをモック化
          sed -i 's/synthetics\.Code\.fromAsset(path\.join(__dirname, "assets\/canary"))/synthetics\.Code\.fromInline("exports.handler = async () => {};")/g' cdk/test/cdk.test.ts
          sed -i 's/"nodejs\/node_modules\/nodejs\/node_modules\/nodejs\/node_modules\/nodejs\/node_modules\/index\.handler"/"index.handler"/g' cdk/test/cdk.test.ts
          sed -i 's/synthetics\.Code\.fromAsset(path\.join(__dirname, "assets\/canary"))/synthetics\.Code\.fromInline("exports.handler = async () => {};")/g' cdk/test/resources.test.ts
          sed -i 's/"nodejs\/node_modules\/nodejs\/node_modules\/nodejs\/node_modules\/nodejs\/node_modules\/index\.handler"/"index.handler"/g' cdk/test/resources.test.ts
      - name: Run tests
        run: npm test
        working-directory: ./cdk

  cdk-synth:
    name: CDK Synth Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./cdk/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./cdk
      - name: Verify TypeScript 
        run: |
          # 統合テストファイルを除外して型チェック
          tsc --noEmit --skipLibCheck lib/*.ts bin/*.ts
        working-directory: ./cdk

  build-app-image:
    name: Build App Docker Image
    runs-on: ubuntu-latest
    needs: cdk-synth
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
            platforms: linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build --platform linux/arm64 -t app:ci ./app
      - name: Verify image
        run: docker run --rm app:ci echo "Application image build successful"

  build-adot-image:
    name: Build ADOT Docker Image
    runs-on: ubuntu-latest
    needs: cdk-synth
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
            platforms: linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build --platform linux/arm64 -t adot:ci ./adot
      - name: Verify image
        run: docker run --rm adot:ci echo "ADOT image build successful"