name: Test

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'cdk/**'
      - '.github/workflows/test.yml'

jobs:
  unit-test:
    name: Unit & Snapshot Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./cdk/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./cdk
      - name: Run tests
        run: npm test
        working-directory: ./cdk
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            cdk/test/__snapshots__
            **/junit.xml

  cdk-synth:
    name: CDK Synth Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./cdk/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./cdk
      - name: Synthesize CDK app
        run: npm run cdk -- synth
        working-directory: ./cdk

  mock-integ-test:
    name: Mock Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ./cdk/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./cdk
      - name: Install AWS CDK
        run: npm install -g aws-cdk
      - name: Mock integration tests
        run: |
          cd cdk
          # 実際にデプロイせずに統合テストが通ることを検証するためのモック
          npx ts-node test/integ.cdk-stack.ts
          npx ts-node test/integ.application-signals.ts